{"version":3,"sources":["Redux/ReduxTypes.ts","Redux/Reducers.tsx","Redux/ConfigureStore.tsx","Layout/Header.tsx","Redux/Actions.ts","Layout/Index.tsx","images/tw3.jpg","images/hr.jpg","Components/Sessions.tsx","Components/DeviceSearch.tsx","Components/Devices.tsx","App.tsx","index.tsx","../external \"electron\""],"names":["SET_SELECTED_DEVICE","SET_ALL_DEVICE","SET_FILTERED_DEVICE","SET_ALL_ANIMALS","SET_LOADING","device","state","action","type","payload","allDevices","filteredDevices","allAnimals","loading","history","createBrowserHistory","useStyles","makeStyles","theme","createStyles","root","flexGrow","appBar","zIndex","drawer","menuButton","marginRight","spacing","title","ButtonAppBar","classes","useState","profile","setProfile","useEffect","a","ipcRenderer","invoke","prof","getAsyncProfile","logout","logoutWindow","remote","BrowserWindow","show","loadURL","on","close","getCurrentWindow","AppBar","position","className","Toolbar","IconButton","edge","color","aria-label","Typography","variant","name","Button","onClick","setFilteredDevices","devices","setAllAnimals","animals","setLoading","width","flexShrink","drawerPaper","drawerContainer","overflow","content","padding","loader","top","left","marginTop","marginLeft","children","dispatch","useDispatch","items","getAllAnimals","loadDevices","token","console","log","useSelector","CssBaseline","Grid","container","justify","item","sm","Drawer","paper","anchor","List","map","text","index","ListItem","button","key","ListItemText","primary","CircularProgress","size","sessions","divider","marginBottom","maxHeight","Sessions","setSessions","page","setPage","rowsPerPage","setRowsPerPage","loadSessions","url","res","weightSessions","mappedSessions","session","weightSession","find","ws","gallagherSessionID","ipAddress","onSessionClick","sessionId","curSession","animalsFromSession","animalsToSend","filter","animalFromSession","match","lId","toLocaleLowerCase","rodeoAnimalId","animalId","sessionInput","sessionName","sessionDate","animalWeights","weight","dateWeight","animalID","sync","length","Divider","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","field","headerName","align","column","TableCell","TableBody","slice","Checkbox","inputProps","Date","toDateString","style","green","red","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","target","value","searchSessions","filteredDev","TextField","label","onChange","e","dev","includes","topRoot","media","height","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","DEVICES_TYPE","DeviceSearch","Card","setSelectedDevice","CardActionArea","CardHeader","src","TW3","HR4","alt","CardContent","CardActions","disableSpacing","store","heading","fontSize","typography","pxToRem","flexBasis","secondaryHeading","palette","secondary","preloadedState","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","configureStore","Home","Index","Devices","RodeoDE","exact","path","render","ReactDOM","StrictMode","App","document","getElementById","module","exports","require"],"mappings":"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","file":"static/js/main.42fe5840.chunk.js","sourcesContent":["export const SET_SELECTED_DEVICE = \"SET_SELECTED_DEVICE\";\nexport const SET_ALL_DEVICE = \"SET_ALL_DEVICE\";\nexport const SET_FILTERED_DEVICE = \"SET_FILTERED_DEVICE\";\nexport const SET_ALL_ANIMALS = \"SET_ALL_ANIMALS\";\nexport const SET_LOADING = \"SET_LOADING\";","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router';\nimport {\n  SET_ALL_DEVICE,\n  SET_SELECTED_DEVICE,\n  SET_FILTERED_DEVICE,\n  SET_ALL_ANIMALS,\n  SET_LOADING\n} from './ReduxTypes';\nimport { AppState } from './ConfigureStore';\n\nconst device = (state = null, action: any) => action.type === SET_SELECTED_DEVICE ? action.payload: state;\nconst allDevices = (state = [], action: any) => action.type === SET_ALL_DEVICE ? action.payload: state;\nconst filteredDevices = (state = [], action: any) => action.type === SET_FILTERED_DEVICE ? action.payload: state;\nconst allAnimals = (state = [], action: any) => action.type === SET_ALL_ANIMALS ? action.payload: state;\nconst loading = (state = false, action: any) => action.type === SET_LOADING ? action.payload: state;\n\nexport default (history: any) => combineReducers<AppState>({\n  router: connectRouter(history),\n  device,\n  allDevices,\n  allAnimals,\n  filteredDevices,\n  loading\n});","import { createBrowserHistory } from 'history'\nimport {Action, applyMiddleware, compose, createStore, Reducer, Store} from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from './Reducers';\nimport {Animal, DevicesType} from '../Types/DevicesType';\n\nexport const history = createBrowserHistory();\n\nexport type AppState = {\n  device: DevicesType,\n  allDevices: DevicesType[],\n  allAnimals: Animal[],\n  filteredDevices: DevicesType[],\n  loading: boolean,\n  history: History\n} & any\n\nexport default function configureStore(preloadedState: any): Store<AppState> {\n  const store = createStore<AppState, Action, unknown, unknown>(\n    createRootReducer(history) as AppState,\n    preloadedState,\n    compose(\n      applyMiddleware(\n        routerMiddleware(history),\n      ),\n    ),\n  )\n\n  return store\n}","import React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ipcRenderer, remote } from 'electron';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  const [profile, setProfile] = useState<{ name: string } | null>(null);\n\n  useEffect(() => {\n    const getAsyncProfile = async () => {\n      const prof = await ipcRenderer.invoke('profile');\n      setProfile(prof);\n    }\n    getAsyncProfile();\n  }, [])\n\n  const logout = async() => {\n    \n    const logoutWindow = new remote.BrowserWindow({\n      show: false,\n    });\n  \n    logoutWindow?.loadURL('https://dev-ktt11zj0.eu.auth0.com/v2/logout');\n  \n    logoutWindow.on('ready-to-show', async () => {\n      logoutWindow.close();\n      await ipcRenderer.invoke('logout');\n      remote.getCurrentWindow().close();\n    });\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Rodeo Desktop Edition - {profile?.name}\n        </Typography>\n        <Button color=\"inherit\" onClick={logout}>Logout</Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import {Animal, DevicesType} from '../Types/DevicesType';\nimport {\n  SET_SELECTED_DEVICE,\n  SET_ALL_DEVICE,\n  SET_FILTERED_DEVICE,\n  SET_ALL_ANIMALS,\n  SET_LOADING\n} from './ReduxTypes';\n\nexport const setSelectedDevice = (device: DevicesType) => ({ type: SET_SELECTED_DEVICE, payload: device });\nexport const setAllDevices = (devices: DevicesType[]) => ({ type: SET_ALL_DEVICE, payload: devices });\nexport const setFilteredDevices = (devices: DevicesType[]) => ({ type: SET_FILTERED_DEVICE, payload: devices });\nexport const setAllAnimals = (animals: Animal[]) => ({ type: SET_ALL_ANIMALS, payload: animals });\nexport const setLoading = (loading: boolean) => ({ type: SET_LOADING, payload: loading });","import React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport {\n  createStyles,\n  Drawer,\n  List,\n  ListItem,\n  Theme,\n  ListItemText,\n  CssBaseline, Toolbar, Grid, CircularProgress\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {ipcRenderer} from \"electron\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setAllAnimals} from '../Redux/Actions';\nimport {green} from '@material-ui/core/colors';\nimport {AppState} from '../Redux/ConfigureStore';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    loader: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  }),\n);\n// @ts-ignore\nexport default ({ children }) => {\n  \n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    const getAllAnimals = async () => {\n      const { animals } = await ipcRenderer.invoke('getAnimals');\n      dispatch(setAllAnimals(animals.items));\n    };\n    getAllAnimals();\n  }, []);\n\n  const loadDevices = async () => {\n    const token = await ipcRenderer.invoke('accessToken');\n    console.log(token);\n  };\n  \n  const classes = useStyles();\n  const loading = useSelector<AppState, boolean>(state => state.loading);\n  return (\n    <div className={classes.root}>\n      <Header />\n      <CssBaseline />\n      <Grid container justify=\"flex-start\" spacing={0}>\n        <Grid item sm={2}>\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            anchor=\"left\"\n          >\n            <div className={classes.drawerContainer}>\n              <Toolbar />\n              <List>\n                {['Устройства', 'Сесии', 'Експорт'].map((text, index) => (\n                  <ListItem button key={text} onClick={loadDevices}>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n            </div>\n          </Drawer>\n        </Grid>\n        <Grid sm={8}>\n          <main className={classes.content}>\n            <Toolbar />\n            {loading && <CircularProgress className={classes.loader} size={40} />}\n            {children}\n          </main>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/tw3.100e2220.jpg\";","export default __webpack_public_path__ + \"static/media/hr.f8cc007b.jpg\";","import React, {FC, useEffect, useState} from 'react';\nimport {ipcRenderer} from 'electron';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Animal, DevicesType} from '../Types/DevicesType';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { AppState } from '../Redux/ConfigureStore';\nimport {AdsAnimal, AdsSession, SessionResponse} from '../Types/GallagherType';\nimport {Checkbox, CircularProgress, Divider, IconButton, TablePagination} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport { green, red } from '@material-ui/core/colors';\nimport {setLoading} from '../Redux/Actions';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    sessions: {\n      marginTop: 20,\n    },\n    divider: {\n      marginBottom: 20\n    },\n    root: {\n      width: '100%',\n    },\n    container: {\n      maxHeight: 700,\n    }\n  }),\n);\n\nconst SessionsPerDevice: FC = () => {\n  \n  const classes = useStyles();\n  const [sessions, setSessions] = useState<AdsSession[]>([]);\n  const [page, setPage] = useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\n  const device: DevicesType = useSelector<AppState, DevicesType>(state => state.device);\n\n  const loadSessions = async (url: string) => {\n    const res = await ipcRenderer.invoke('loadSessions', url);\n    const { weightSessions } = await ipcRenderer.invoke('weightSessions');\n    const casted = res as SessionResponse;\n    const sessions = casted[\"ads:body\"]?.[\"ads:sessions\"]?.[\"ads:session\"] as AdsSession[];\n    const mappedSessions = sessions?.map(session => {\n      const weightSession = weightSessions?.items?.find((ws: any) => ws.gallagherSessionID === session['ads:session_id']);\n      return {\n        ...session,\n        //['ads:sync']: weightSession?.isSync || false\n        ['ads:sync']: !!weightSession\n      };\n    });\n    setSessions(mappedSessions);\n  }\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  useEffect(() => {\n    if(device) {\n      loadSessions(device.ipAddress);  \n    }\n  }, [device]);\n  \n  const dispatch = useDispatch();\n  \n  const allAnimals = useSelector<AppState, Animal[]>(state => state.allAnimals);\n  \n  const onSessionClick = async (session: AdsSession) => {\n    dispatch(setLoading(true));\n    const res = await ipcRenderer.invoke(\"loadSessionById\", \n      { sessionId: session['ads:session_id'], url: device.ipAddress});\n    const singleSessionResponse = res as SessionResponse;\n    const curSession = singleSessionResponse[\"ads:body\"]?.[\"ads:sessions\"]?.[\"ads:session\"] as AdsSession;\n    const animalsFromSession = curSession['ads:animals']?.['ads:animal'];\n    const animalsToSend = animalsFromSession?.filter((animalFromSession: AdsAnimal) => {\n      const match = allAnimals.find(\n        a => a.lId?.toLocaleLowerCase() === animalFromSession?.['ads:animalId']?.['ads:tag']?.toLocaleLowerCase());\n      animalFromSession.rodeoAnimalId = match?.animalId;\n      return !!match;\n    });\n\n    const sessionInput = {\n      gallagherSessionID: session['ads:session_id'],\n      sessionName: session['ads:name'],\n      sessionDate: session['ads:startDate'],\n      animalWeights: animalsToSend?.map((a: AdsAnimal) => {\n        return {\n          weight: a['ads:weight']?.['ads:value'],\n          dateWeight: a['ads:datetime'],\n          animalID: a.rodeoAnimalId\n        };\n      }) || []\n    };\n    console.log(sessionInput);\n    const sync = await ipcRenderer.invoke(\"syncSession\", sessionInput);\n    console.log(sync);\n\n    await loadSessions(device.ipAddress);\n\n    dispatch(setLoading(false));\n    \n  }\n    \n  const columns = [\n    {field: 'id', headerName: '', align: 'right'},\n    {field: 'deviceName', headerName: 'Устройство', align: 'right'},\n    {field: 'dateOfSession', headerName: 'Дата на сесия', align: 'right'},\n    {field: 'animalCount', headerName: 'Брой животни', align: 'center'},\n    {field: 'sync', headerName: 'Синхронизирана', align: 'center'},\n    {field: 'id', headerName: '', align: 'center'},\n  ];\n  \n  return sessions.length > 0 ? (\n    <div className={classes.sessions}>\n      <h2>Сесии</h2>\n      <p>Информация за сесиите в свързаното устройство</p>\n      <Divider className={classes.divider} />\n\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.field}\n                    align='center'\n                  >\n                    {column.headerName}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sessions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((session) => (\n                <TableRow title={session['ads:session_id']} key={session['ads:session_id']}>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox inputProps={{ 'aria-label': 'select all desserts' }} />\n                  </TableCell>\n                  {/*<TableCell align=\"center\">{session['ads:session_id']}</TableCell>*/}\n                  <TableCell align=\"center\">{session['ads:name']}</TableCell>\n                  <TableCell align=\"center\">{new Date(session['ads:startDate'])?.toDateString()}</TableCell>\n                  <TableCell align=\"center\">{session['ads:animals']?.['ads:attributes']?.['ads:count']}</TableCell>\n                  <TableCell align=\"center\">{session['ads:sync'] ? <CheckCircleIcon style={{ color: green[500] }}/> : <CancelIcon style={{ color: red[500] }} />}</TableCell>\n                  <TableCell align=\"center\">{!session['ads:sync'] && (\n                    <IconButton aria-label=\"sync\" title=\"Синхронизирай с Родео\" onClick={() => onSessionClick(session)}>\n                      <SyncIcon />\n                  </IconButton>)\n                  }</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={sessions.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  ) : null\n};\n\nexport const Sessions = SessionsPerDevice;","import React, {useEffect} from 'react';\nimport {DevicesType} from '../Types/DevicesType';\nimport {useDispatch, useSelector, useStore} from 'react-redux';\nimport {AppState} from '../Redux/ConfigureStore';\nimport {TextField} from '@material-ui/core';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport {setFilteredDevices} from '../Redux/Actions';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    searchSessions: {\n      marginBottom: 20,\n    }\n  }),\n);\n\nexport default () => {\n  const allDevices: DevicesType[] = useSelector<AppState, DevicesType[]>(state => state.allDevices);\n  const filteredDev: DevicesType[] = useSelector<AppState, DevicesType[]>(state => state.filteredDevices);\n  const {searchSessions} = useStyles();\n  const dispatch = useDispatch();\n  \n  const filterAllDevices = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    const dev = value \n      ? allDevices.filter(device => \n          device?.name?.toLocaleLowerCase()?.includes(e.target?.value?.toLocaleLowerCase()))\n      : allDevices\n    dispatch(setFilteredDevices([...dev]));\n  };\n  \n  return (\n    <div className={searchSessions}>\n      <h3>Устройства ( {filteredDev?.length} )</h3>\n      <TextField label=\"Търсене\" onChange={filterAllDevices} />\n    </div>\n  )\n};","import React, { useEffect, useState } from 'react';\nimport { ipcRenderer } from 'electron';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { DevicesType } from '../Types/DevicesType';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {CardActionArea, Divider, Grid} from '@material-ui/core';\nimport TW3 from '../images/tw3.jpg';\nimport HR4 from '../images/hr.jpg';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setAllDevices, setFilteredDevices, setSelectedDevice} from '../Redux/Actions';\nimport {Sessions} from './Sessions';\nimport DeviceSearch from './DeviceSearch';\nimport {AppState} from '../Redux/ConfigureStore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  topRoot: {\n    marginBottom: 20\n  },\n  media: {\n    height: 150,\n    width: 170,\n    marginLeft: 35\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst DEVICES_TYPE = {\n  TW3: \"TW3\",\n  HR4: \"HR4\"\n}\n\nexport default () => {\n  // const [devices, setDevices] = useState<DevicesType[]>([]);\n  const filteredDevices = useSelector<AppState, DevicesType[]>(state => state.filteredDevices);\n  const dispatch = useDispatch();\n  const loadDevices = async () => {\n    const res = await ipcRenderer.invoke('loadDevices');\n    console.log(res);\n    // setDevices(res);\n    dispatch(setAllDevices([...res]));\n    dispatch(setFilteredDevices([...res]));\n  };\n\n  useEffect(() => {\n    loadDevices();\n  }, []);\n  \n  const classes = useStyles();\n  \n  return (\n    <Grid container justify=\"center\">\n      <Grid item sm={10}>\n        <DeviceSearch />\n      </Grid>\n      <Grid item sm={10} className={classes.topRoot}>\n        <Grid container className={classes.root} justify=\"flex-start\" spacing={2}>\n          { filteredDevices.map(device => {\n            return (\n              <Grid item container sm={4}>\n                \n                <Card className={classes.root} key={device.name} onClick={() => {\n                  dispatch(setSelectedDevice(device));\n                }}>\n                  <CardActionArea>\n                    <CardHeader/>\n                    <img className={classes.media} src={device.type === DEVICES_TYPE.TW3 ? TW3 : HR4} alt=\"\" />\n                    <CardContent>\n                      <h2>{device.type === DEVICES_TYPE.TW3 ? 'Кантар' : 'Четец'}</h2>\n                      <h1>{device.name}</h1>\n                      <h3>{(device.ipAddress)}</h3>\n                      <p>Свързване с кантарно устройство</p>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                      <IconButton aria-label=\"add to favorites\" onClick={loadDevices}>\n                        <FavoriteIcon />\n                      </IconButton>\n                      <IconButton aria-label=\"share\">\n                        <ShareIcon />\n                      </IconButton>\n                    </CardActions>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid item sm={10}>\n        <Grid item>\n          <Sessions />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};","// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n//\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n//\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDom from 'react-dom';\nimport { ipcRenderer } from 'electron';\nimport { SessionResponse, AdsSession, AdsAnimals } from './Types/GallagherType';\nimport Header from './Layout/Header';\nimport { Button } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {DevicesType} from './Types/DevicesType';\n\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router' // react-router v4/v5\nimport { ConnectedRouter } from 'connected-react-router'\nimport configureStore, { history } from './Redux/ConfigureStore';\nimport Index from './Layout/Index';\nimport Devices from './Components/Devices';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: '33.33%',\n      flexShrink: 0,\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nconst store = configureStore({ });\n\nconst Home = () => (\n  <Index>\n    <Devices />\n  </Index>\n)\n\nconst RodeoDE = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <>\n        <Switch>\n          <Route exact path=\"/*\" render={() => <Home />} />\n          {/*<Route render={() => (<div>Miss</div>)} />*/}\n        </Switch>\n      </>\n    </ConnectedRouter>\n  </Provider>\n)\nexport default RodeoDE;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","module.exports = require(\"electron\");"],"sourceRoot":""}